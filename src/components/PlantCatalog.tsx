import { motion, useInView, useScroll, useTransform } from "framer-motion";
import { useRef, useState } from "react";
import { Leaf, Flower, TreePine, Sparkles, Search, ShoppingCart } from "lucide-react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { useCart } from "@/contexts/CartContext";
import { Cart } from "./Cart";

// Single source of truth for plant categories and their plants
const plantCategories = [
  {
    category: "ü•≠ Mango",
    plants: [
      { name: "Himsagar mango", price: "‚Çπ250" },
      { name: "Amrapali mango", price: "‚Çπ250" },
      { name: "Langda mango", price: "‚Çπ250" },
      { name: "Vastara mango", price: "‚Çπ300" },
      { name: "Alphanso mango", price: "‚Çπ350" },
      { name: "Hari vanga mango", price: "‚Çπ350" },
      { name: "Gourmoti mango", price: "‚Çπ350" },
      { name: "Miyazaki mango", price: "‚Çπ550" },
      { name: "Red Ivory Mango", price: "‚Çπ400" },
      { name: "Red Palmar mango", price: "‚Çπ400" },
      { name: "Qjai mango", price: "‚Çπ400" },
      { name: "Banana mango", price: "‚Çπ350" },
      { name: "Thai katimoni mango", price: "‚Çπ350" },
      { name: "Thai All Time mango", price: "‚Çπ280" },
      { name: "King of chakapat mango", price: "‚Çπ430" },
      { name: "Brunai King Mango", price: "‚Çπ380" },
      { name: "Verigated Mango", price: "‚Çπ450" },
      { name: "Pusa suriya Mango", price: "‚Çπ400" },
      { name: "Pusa Arunima Mango", price: "‚Çπ400" },
      { name: "Honeydew mango", price: "‚Çπ400" },
      { name: "R2E2 mango", price: "‚Çπ400" },
      { name: "Pusa Arunika mango", price: "‚Çπ400" },
      { name: "3 taste mango", price: "‚Çπ380" },
      { name: "Kasturi black mango", price: "‚Çπ500" },
      { name: "Chausa mango", price: "‚Çπ350" },
      { name: "Bari 13 mango", price: "‚Çπ400" },
      { name: "Nam Docmi mango", price: "‚Çπ450" },
      { name: "Ambika mango", price: "‚Çπ400" },
      { name: "Totapuri Mango", price: "‚Çπ330" }
    ]
  },
  {
    category: "üå≥ Guava",
    plants: [
      { name: "Thiwan pink guava", price: "‚Çπ200" },
      { name: "Golden 8 Guava", price: "‚Çπ200" },
      { name: "Black diamond guava", price: "‚Çπ1000" },
      { name: "Vnr guava", price: "‚Çπ200" },
      { name: "Red Diamond Guava", price: "‚Çπ300" },
      { name: "Allahbad guava", price: "‚Çπ150" },
      { name: "Verigated guava", price: "‚Çπ300" },
      { name: "Strawberry guava", price: "‚Çπ350" },
      { name: "Red diamond Guava", price: "‚Çπ200" },
      { name: "Red guava", price: "‚Çπ200" },
      { name: "White diamond Guava", price: "‚Çπ300" }
    ]
  },
  {
    category: "üçã Lemon",
    plants: [
      { name: "Baramasi kagzi lemon", price: "‚Çπ170" },
      { name: "Kolkata pati lemon", price: "‚Çπ170" },
      { name: "Thai pati lemon", price: "‚Çπ150" },
      { name: "Seedless lemon", price: "‚Çπ180" },
      { name: "Pakistani pati lemon", price: "‚Çπ250" },
      { name: "Red pati lemon", price: "‚Çπ200" },
      { name: "Sweet lemon", price: "‚Çπ250" },
      { name: "Gandharaj pati lemon", price: "‚Çπ160" },
      { name: "Finger lime", price: "‚Çπ350" },
      { name: "Kamkut lemon", price: "‚Çπ200" }
    ]
  },
  {
    category: "üçë Mosambi",
    plants: [
      { name: "Bari 1 Malta", price: "‚Çπ200" },
      { name: "Desi Musambi", price: "‚Çπ220" },
      { name: "India musambi", price: "‚Çπ300" },
      { name: "Vietnam Malta", price: "‚Çπ250" },
      { name: "Misoriyo yellow Malta", price: "‚Çπ300" }
    ]
  },
  {
    category: "üçä Orange (Santra)",
    plants: [
      { name: "Darjeeling Orange", price: "‚Çπ300" },
      { name: "Mandarin Orange", price: "‚Çπ300" },
      { name: "Vutani Satoki Orange", price: "‚Çπ330" },
      { name: "Thai 2 orange", price: "‚Çπ350" },
      { name: "Pakistani orange", price: "‚Çπ350" },
      { name: "Decopon orange", price: "‚Çπ370" },
      { name: "Nagpur orange", price: "‚Çπ300" },
      { name: "Chainij Rambutan orange", price: "‚Çπ250" },
      { name: "Blood orange", price: "‚Çπ450" },
      { name: "Kinnu orange", price: "‚Çπ300" }
    ]
  },
  {
    category: "üçé Apple Ber Plant",
    plants: [
      { name: "Green apple ber plant", price: "‚Çπ130" },
      { name: "Miss India apple ber", price: "‚Çπ120" },
      { name: "Ball sundari apple ber plant", price: "‚Çπ110" }
    ]
  },
  {
    category: "üêâ Dragon Fruit",
    plants: [
      { name: "Pink dragon", price: "‚Çπ100" },
      { name: "Moroccan Red dragon", price: "‚Çπ120" },
      { name: "Yellow dragon", price: "‚Çπ150" }
    ]
  },
  {
    category: "üå∞ Chikko Plant",
    plants: [
      { name: "Cricket ball chikko", price: "‚Çπ220" },
      { name: "Thai Banana Chiku", price: "‚Çπ250" },
      { name: "Kalapati chikko", price: "‚Çπ240" },
      { name: "Verigated chikko", price: "‚Çπ250" }
    ]
  },
  {
    category: "ü•• Coconut Plant",
    plants: [
      { name: "Gangabardhan coconut", price: "‚Çπ500" },
      { name: "Vietnaam coconut", price: "‚Çπ500" },
      { name: "Keralian coconut", price: "‚Çπ450" },
      { name: "Desi coconut", price: "‚Çπ350" },
      { name: "Malasian green coconut", price: "‚Çπ500" }
    ]
  },
  {
    category: "üå≥ Jackfruit Plant",
    plants: [
      { name: "Vietnam super early jackfruit", price: "‚Çπ350" },
      { name: "Red jackfruit", price: "‚Çπ300" }
    ]
  },
  {
    category: "üçà Longon Plant",
    plants: [
      { name: "4 Season Longon", price: "‚Çπ900" },
      { name: "Black Longon", price: "‚Çπ2500" },
      { name: "White Longon", price: "‚Çπ1200" },
      { name: "Ping Pong Longon", price: "‚Çπ1200" },
      { name: "Ruby Longon", price: "‚Çπ750" },
      { name: "Red Ping Pong Longon", price: "‚Çπ1000" },
      { name: "Ping ping Pong Longon", price: "‚Çπ1200" },
      { name: "Desi Longon", price: "‚Çπ500" }
    ]
  },
  {
    category: "üçí Litchi Plant",
    plants: [
      { name: "Bombai Litchi", price: "‚Çπ300" },
      { name: "Muzaffarpur Sahi Litchi", price: "‚Çπ300" },
      { name: "Chaina 3 lichi", price: "‚Çπ300" }
    ]
  },
  {
    category: "üçé Water Apple Plant",
    plants: [
      { name: "Dalhari Champa Water Apple", price: "‚Çπ300" },
      { name: "King Kong Chamba Water Apple", price: "‚Çπ350" },
      { name: "Bali Champa Water Apple", price: "‚Çπ300" },
      { name: "Red Missile Water Apple", price: "‚Çπ380" },
      { name: "Rose Apple", price: "‚Çπ250" },
      { name: "White Water Apple", price: "‚Çπ250" }
    ]
  },
  {
    category: "üçä Pomelo Plant",
    plants: [
      { name: "Assembly Pomelo (green)", price: "‚Çπ0" },
      { name: "Red Pomelo", price: "‚Çπ0" },
      { name: "Yellow Pomelo", price: "‚Çπ0" }
    ]
  },
  {
    category: "ü´ê Jamun Plant",
    plants: [
      { name: "Desi jamun", price: "‚Çπ250" },
      { name: "Desi white Jamun", price: "‚Çπ280" },
      { name: "Thai king jamun", price: "‚Çπ300" }
    ]
  },
  {
    category: "ü•ù Kiwi Plant",
    plants: [
      { name: "Kiwi (grafted)", price: "‚Çπ450" },
      { name: "Kiwi (clone)", price: "‚Çπ250" }
    ]
  },
  {
    category: "üåø Amla",
    plants: [
      { name: "Red Amla", price: "‚Çπ230" },
      { name: "Green Amla", price: "‚Çπ250" }
    ]
  },
  {
    category: "üçà Pomegranate",
    plants: [
      { name: "Super Vagoa Anar", price: "‚Çπ350" },
      { name: "Ganesh Anar", price: "‚Çπ280" }
    ]
  },
  {
    category: "ü´ê Mulberry Plant",
    plants: [
      { name: "Long mulberry", price: "‚Çπ400" },
      { name: "Short Mulberry", price: "‚Çπ250" }
    ]
  },
  {
    category: "üçà Custard Apple",
    plants: [
      { name: "Golden custard apple", price: "‚Çπ350" },
      { name: "Red custard apple", price: "‚Çπ400" }
    ]
  },
  {
    category: "üçí Cherry",
    plants: [
      { name: "Sweet & sour Cherry", price: "‚Çπ250" },
      { name: "Black surinam cherry", price: "‚Çπ700" },
      { name: "Red Surinam cherry", price: "‚Çπ350" },
      { name: "Manila cherry", price: "‚Çπ750" },
      { name: "Savannah cherry", price: "‚Çπ800" },
      { name: "Cherry of Rio Grande", price: "‚Çπ1200" }
    ]
  },
  {
    category: "ü´ê Berry",
    plants: [
      { name: "Blue berry", price: "‚Çπ650" },
      { name: "Black berry", price: "‚Çπ350" }
    ]
  },
  {
    category: "üåø Fig Anjeer",
    plants: [
      { name: "Pune rade fig", price: "‚Çπ300" },
      { name: "Turki brown fig/five finger fig", price: "‚Çπ400" }
    ]
  },
  {
    category: "üåø Masala Plant",
    plants: [
      { name: "Dalchini plant", price: "‚Çπ300" },
      { name: "Bay leaf plant", price: "‚Çπ250" },
      { name: "Black paper plant", price: "‚Çπ350" },
      { name: "Jayfal plant", price: "‚Çπ900" },
      { name: "Kari patta plant", price: "‚Çπ300" },
      { name: "Elachi plant", price: "‚Çπ250" }
    ]
  },
  {
    category: "üå≤ Forest Plant",
    plants: [
      { name: "Red sandalwood", price: "‚Çπ250" },
      { name: "White Sandalwood", price: "‚Çπ300" },
      { name: "Mehgoni plant", price: "‚Çπ150" },
      { name: "Segun plant", price: "‚Çπ150" },
      { name: "Supari plant", price: "‚Çπ180" }
    ]
  },
  {
    category: "üåπ Climbing & Color Roses",
    plants: [
      { name: "Climbing Rose (Red)", price: "‚Çπ400-‚Çπ600" },
      { name: "Climbing Rose (Pink)", price: "‚Çπ400-‚Çπ600" },
      { name: "Climbing Rose (Yellow)", price: "‚Çπ350-‚Çπ500" },
      { name: "Hybrid English Rose (Lady Hillingdon)", price: "‚Çπ240-‚Çπ400" },
      { name: "Damascus Rose (scented hybrid)", price: "‚Çπ300-‚Çπ400" },
      { name: "Miniature/Button Roses (mixed colors)", price: "‚Çπ300-‚Çπ350" }
    ]
  },
  {
    category: "üå∏ Orchids & Exotic Flowerers",
    plants: [
      { name: "Phalaenopsis Hybrid (Flowering)", price: "‚Çπ500-‚Çπ800" },
      { name: "Dendrobium/Spathoglottis", price: "‚Çπ200-‚Çπ400" },
      { name: "Oncidium/Tolumnia", price: "‚Çπ300-‚Çπ500" },
      { name: "Cattleya/Vanda hybrids", price: "‚Çπ500-‚Çπ1000+" },
      { name: "Jewel Orchid (Anoectochilus spp.)", price: "‚Çπ300-‚Çπ500" }
    ]
  },
  {
    category: "üåº Native & Fragrant Indian Flowering Shrubs",
    plants: [
      { name: "Raat Ki Rani (Cestrum nocturnum)", price: "‚Çπ300-‚Çπ400" },
      { name: "Yellow Raat Ki Rani", price: "‚Çπ300-‚Çπ499" },
      { name: "Chameli/Mogra (Jasminum sambac)", price: "‚Çπ120-‚Çπ180" },
      { name: "Harshringar/Parijat (Cestrum diurnum)", price: "‚Çπ350-‚Çπ450" },
      { name: "Ixora (Flowering shrub native)", price: "‚Çπ120-‚Çπ150" },
      { name: "Hibiscus Rosa-sinensis (common)", price: "‚Çπ150-‚Çπ250" },
      { name: "Hibiscus Hybrid Grafted (double blooms)", price: "‚Çπ200-‚Çπ350" },
      { name: "Thunbergia mysorensis (Mysore trumpet vine)", price: "‚Çπ250-‚Çπ350" },
      { name: "Periwinkle (Catharanthus roseus)", price: "‚Çπ50-‚Çπ100" },
      { name: "Marigold (Tagetes) bedding annual", price: "‚Çπ30-‚Çπ50" },
      { name: "Jasmine sambac 'Mysore Mallige'", price: "‚Çπ120-‚Çπ180" }
    ]
  },
  {
    category: "üå∑ Ornamental Hybrids & Garden Varieties",
    plants: [
      { name: "Azalea/Rhododendron (hybrid)", price: "‚Çπ350-‚Çπ500" },
      { name: "Petunia (hybrid annual climbers)", price: "‚Çπ25-‚Çπ50" },
      { name: "Balsam (Impatiens balsamina)", price: "‚Çπ20-‚Çπ40" },
      { name: "Rain Lily (Zephyranthes) bulbs", price: "‚Çπ40-‚Çπ70" },
      { name: "Chrysanthemum (garden mum)", price: "‚Çπ100-‚Çπ150" },
      { name: "Kanakambara (Crossandra spp.)", price: "‚Çπ60-‚Çπ120" },
      { name: "Perennial Coleus", price: "‚Çπ40-‚Çπ80" },
      { name: "Geranium (Pelargonium zonale)", price: "‚Çπ80-‚Çπ150" },
      { name: "Oleander (Nerium oleander)", price: "‚Çπ150-‚Çπ200" },
      { name: "Plumeria (Frangipani)", price: "‚Çπ200-‚Çπ350" },
      { name: "Bougainvillea Hybrid", price: "‚Çπ350-‚Çπ500" },
      { name: "Lantana camara", price: "‚Çπ60-‚Çπ120" },
      { name: "Mussaenda (tropical shrub)", price: "‚Çπ150-‚Çπ250" },
      { name: "Philippine Violet (Barleria cristata)", price: "‚Çπ80-‚Çπ120" },
      { name: "Gardenia jasminoides (Cape Jasmine)", price: "‚Çπ150-‚Çπ250" },
      { name: "Hibiscus syriacus (Rose of Sharon)", price: "‚Çπ200-‚Çπ350" },
      { name: "Ixora 'Nora Grant' (hybrid cultivar)", price: "‚Çπ150-‚Çπ200" },
      { name: "Stephanotis floribunda (Madagascar jasmine)", price: "‚Çπ200-‚Çπ350" },
      { name: "Tagetes minuta (Wild marigold)", price: "‚Çπ20-‚Çπ40" },
      { name: "Plumbago auriculata (Cape leadwort)", price: "‚Çπ120-‚Çπ200" }
    ]
  },
  {
    category: "üå≥ Flowering Trees & Seasonal Blooms",
    plants: [
      { name: "Magnolia champaca (Champak)", price: "‚Çπ250-‚Çπ400" },
      { name: "Tabebuia rosea (Pink trumpet tree)", price: "‚Çπ200-‚Çπ300" },
      { name: "Bauhinia purpurea (Purple Bauhinia)", price: "‚Çπ150-‚Çπ250" },
      { name: "Cassia fistula (Golden shower tree)", price: "‚Çπ150-‚Çπ250" }
    ]
  },
  {
    category: "üèµ Annual & Showy Flowers",
    plants: [
      { name: "Dahlia (grafted tuber plant)", price: "‚Çπ150-‚Çπ250" },
      { name: "Zinnia (annual flower bedding)", price: "‚Çπ20-‚Çπ40" },
      { name: "Sunflower (grafted/multi-branch)", price: "‚Çπ50-‚Çπ100" },
      { name: "Hybrid Gladiolus (flowering bulbs)", price: "‚Çπ60-‚Çπ100" }
    ]
  },
  {
    category: "üåø Other Varieties",
    plants: [
      { name: "Sweet tamarind (imly)", price: "‚Çπ350" },
      { name: "Thai all Time sweet amra", price: "‚Çπ400" },
      { name: "Cashew nuts", price: "‚Çπ380" },
      { name: "All time star fruit", price: "‚Çπ300" },
      { name: "Parsimmon plant", price: "‚Çπ550" },
      { name: "Rambhutan plant", price: "‚Çπ550" },
      { name: "Mangosteen plant seedling", price: "‚Çπ400" },
      { name: "Mangosteen grafted", price: "‚Çπ1200" },
      { name: "HRMN 99 Apple", price: "‚Çπ400" },
      { name: "Olive plant", price: "‚Çπ300" },
      { name: "G9 Banana Plant", price: "‚Çπ250" },
      { name: "Red banana plant", price: "‚Çπ300" },
      { name: "Macdomia nut plant", price: "‚Çπ450" },
      { name: "Apricot fruit plant", price: "‚Çπ450" },
      { name: "Passion fruit plant", price: "‚Çπ400" },
      { name: "Pear fruit plant", price: "‚Çπ350" },
      { name: "Rambhutan", price: "‚Çπ400" },
      { name: "Almond", price: "‚Çπ300" },
      { name: "Sweet lubi", price: "‚Çπ250" },
      { name: "Black sapota", price: "‚Çπ900" },
      { name: "Nonifol", price: "‚Çπ400" },
      { name: "Abiu fruit", price: "‚Çπ350" },
      { name: "Jaboticaba red hybrid", price: "‚Çπ950" }
    ]
  }
];

const categories = [
  { name: "All Plants", icon: Leaf, active: true },
  { name: "Fruit Plants", icon: TreePine, active: false },
  { name: "Flowers", icon: Flower, active: false },
  { name: "Ornamental", icon: Sparkles, active: false },
  { name: "Masala Plants", icon: Leaf, active: false }
];

const PlantCatalog = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [activeCategory, setActiveCategory] = useState("All Plants");
  const { addItem } = useCart();
  
  // Function to add item to cart with proper ID and data
  const handleAddToCart = (plant: { name: string; price: string }, category: string) => {
    // Create a consistent ID using the plant name and category
    const itemId = `${category}-${plant.name}`.toLowerCase().replace(/[^a-z0-9-]/g, '-');
    
    const item = {
      id: itemId,
      name: `${plant.name} (${category})`,
      price: plant.price
    };
    
    console.log('Adding to cart:', item);
    addItem(item);
  };
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true });
  const { scrollYProgress } = useScroll({
    target: ref,
    offset: ["start end", "end start"]
  });

  const y = useTransform(scrollYProgress, [0, 1], [100, -100]);

  // Function to calculate similarity between two strings (0-1)
  const getSimilarity = (str1: string, str2: string): number => {
    const s1 = str1.toLowerCase();
    const s2 = str2.toLowerCase();
    
    // Exact match
    if (s1 === s2) return 1;
    
    // Check for partial matches
    if (s1.includes(s2) || s2.includes(s1)) return 0.9;
    
    // Check for common misspellings and alternative names
    const commonMisspellings: Record<string, string[]> = {
      'guava': ['gauva', 'guvava'],
      'mango': ['mangoe', 'manggo'],
      'lemon': ['limon', 'lemin', 'lime'],
      'orange': ['orrange', 'orenge'],
      'dragon fruit': ['pitaya', 'pitahaya'],
      'coconut': ['cocunut', 'cocount'],
      'chrysanthemum': ['chrysanthamum', 'chrysanthemem'],
      'hibiscus': ['hibiscuss', 'hisbiscus'],
      'jasmine': ['jasmin', 'jessamine'],
      'marigold': ['marygold', 'merigold']
    };
    
    // Check if either string is in the other's misspellings
    for (const [correct, misspellings] of Object.entries(commonMisspellings)) {
      if ((s1 === correct && misspellings.includes(s2)) || 
          (s2 === correct && misspellings.includes(s1))) {
        return 0.8;
      }
    }
    
    // Simple similarity check (Levenshtein distance would be better but this is simpler)
    const words1 = s1.split(/\s+/);
    const words2 = s2.split(/\s+/);
    
    // Check if any word from search appears in the target
    for (const word1 of words1) {
      for (const word2 of words2) {
        if (word1.length > 3 && word2.length > 3 && 
            (word1.includes(word2) || word2.includes(word1))) {
          return 0.7;
        }
      }
    }
    
    return 0;
  };
  
  // Filter plants based on search term and active category
  const filteredCategories = plantCategories.filter(({ category, plants }) => {
    // First, check if the category matches the active filter
    const isFruitCategory = [
      'Guava', 'Lemon', 'Mosambi', 'Orange', 'Apple Ber', 'Dragon Fruit', 'Chikko', 'Coconut',
      'Jackfruit', 'Longon', 'Litchi', 'Water Apple', 'Pomelo', 'Jamun', 'Kiwi', 'Amla',
      'Pomegranate', 'Mulberry', 'Custard Apple', 'Cherry', 'Berry', 'Mango'
    ].some(fruit => category.includes(fruit));
    
    const isOrnamentalCategory = [
      'Azalea', 'Rhododendron', 'Petunia', 'Balsam', 'Rain Lily', 'Chrysanthemum', 'Kanakambara',
      'Coleus', 'Geranium', 'Oleander', 'Plumeria', 'Frangipani', 'Bougainvillea', 'Lantana',
      'Mussaenda', 'Philippine Violet', 'Barleria', 'Gardenia', 'Jasmine', 'Hibiscus', 'Ixora',
      'Stephanotis', 'Tagetes', 'Plumbago', 'Magnolia', 'Tabebuia', 'Bauhinia', 'Ornamental',
      'Flowering Trees', 'Seasonal Blooms'
    ].some(ornamental => category.includes(ornamental));
    
    const isMasalaPlant = [
      'Dalchini', 'Bay leaf', 'Black paper', 'Jayfal', 'Kari patta', 'Elachi', 'Masala',
      'Sweet tamarind', 'Thai all Time sweet amra', 'Cashew nuts', 'All time star fruit',
      'Parsimmon', 'Rambhutan', 'Mangosteen', 'HRMN 99 Apple', 'Olive', 'G9 Banana',
      'Red banana', 'Macdomia nut', 'Apricot', 'Passion fruit', 'Pear', 'Almond',
      'Sweet lubi', 'Black sapota', 'Nonifol', 'Abiu', 'Jaboticaba', 'Fig Anjeer',
      'Pune rade fig', 'Turki brown fig', 'Red sandalwood', 'White Sandalwood',
      'Mehgoni', 'Segun', 'Supari', 'Forest Plant'
    ].some(plant => category.includes(plant));
    
    const isFlowerCategory = (category: string): boolean => {
      // Only match exact category names from the provided list
      const flowerCategories = [
        'üå≥ Flowering Trees & Seasonal Blooms',
        'üèµ Annual & Showy Flowers',
        'üåπ Climbing & Color Roses',
        'üå∏ Orchids & Exotic Flowerers',
        'üåº Native & Fragrant Indian Flowering Shrubs'
      ];
      
      return flowerCategories.includes(category);
    };
    
    const matchesCategory = 
        activeCategory === "All Plants" || 
        (activeCategory === "Fruit Plants" && isFruitCategory) ||
        (activeCategory === "Flowers" && isFlowerCategory(category)) ||
        (activeCategory === "Ornamental" && (category.includes("üåø") || isOrnamentalCategory)) ||
        (activeCategory === "Masala Plants" && isMasalaPlant);
    
    // If there's a search term, check for matches
    if (searchTerm.trim()) {
      const search = searchTerm.toLowerCase();
      
      // Check if any plant in this category matches the search
      const matchesSearch = plants.some(plant => {
        const name = plant.name.toLowerCase();
        const categoryLower = category.toLowerCase();
        
        // Check direct matches first
        if (name.includes(search) || categoryLower.includes(search)) {
          return true;
        }
        
        // Check for similar matches
        const nameSimilarity = getSimilarity(name, search);
        const categorySimilarity = getSimilarity(categoryLower, search);
        
        return nameSimilarity > 0.6 || categorySimilarity > 0.6;
      });
      
      return matchesSearch && matchesCategory;
    }
    
    // If no search term, just check category
    return matchesCategory;
  });

  return (
    <section ref={ref} className="py-20 bg-background relative overflow-hidden">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.5 }}
          className="text-center mb-12"
        >
          <h2 className="text-4xl font-bold mb-4">Our Plant Catalog</h2>
          <p className="text-muted-foreground max-w-2xl mx-auto">
            Explore our wide variety of plants and find the perfect addition to your garden
          </p>
        </motion.div>

        {/* Search and Filter */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.5, delay: 0.1 }}
          className="mb-8"
        >
          <div className="relative max-w-2xl mx-auto mb-6">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-muted-foreground" />
            <Input
              type="text"
              placeholder="Search plants..."
              className="pl-10 w-full"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>

          <div className="flex flex-wrap justify-center gap-2">
            {categories.map(({ name, icon: Icon }) => (
              <Button
                key={name}
                variant={activeCategory === name ? "default" : "outline"}
                className={`flex items-center gap-2 ${
                  activeCategory === name ? "bg-primary text-primary-foreground" : ""
                }`}
                onClick={() => setActiveCategory(name)}
              >
                <Icon className="h-4 w-4" />
                {name}
              </Button>
            ))}
          </div>
        </motion.div>

        {/* Plant Categories */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredCategories.map(({ category, plants }) => (
            <motion.div
              key={category}
              initial={{ opacity: 0, y: 20 }}
              animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
              transition={{ duration: 0.3 }}
              className="bg-card rounded-lg shadow-md overflow-hidden border border-border"
            >
              <div className="bg-muted/50 p-4 border-b border-border">
                <h3 className="text-lg font-semibold">{category}</h3>
              </div>
              <div className="p-4">
                <ul className="space-y-2">
                  {plants.map((plant) => {
                    const searchQuery = encodeURIComponent(`${plant.name} plant care`);
                    const itemId = `${category}-${plant.name}`.replace(/\s+/g, '-').toLowerCase();
                    
                    return (
                      <li key={itemId} className="flex flex-col sm:flex-row sm:items-center justify-between gap-2 py-2 border-b">
                        <div className="flex-1">
                          <a 
                            href={`https://www.google.com/search?q=${searchQuery}`} 
                            target="_blank" 
                            rel="noopener noreferrer"
                            className="text-foreground/90 hover:text-primary hover:underline transition-colors"
                          >
                            {plant.name}
                          </a>
                        </div>
                        <div className="flex items-center gap-4">
                          <span className="font-medium text-primary whitespace-nowrap">{plant.price}</span>
                          <Button 
                            size="sm" 
                            variant="outline"
                            className="h-8 px-2 sm:px-3 text-xs sm:text-sm"
                            onClick={() => handleAddToCart(plant, category)}
                          >
                            <ShoppingCart className="h-4 w-4 mr-1" />
                            Add
                          </Button>
                        </div>
                      </li>
                    );
                  })}
                </ul>
              </div>
            </motion.div>
          ))}
        </div>

        {filteredCategories.length === 0 && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            className="text-center py-12"
          >
            <p className="text-muted-foreground">No plants found matching your search.</p>
            <Button 
              variant="ghost" 
              className="mt-4"
              onClick={() => {
                setSearchTerm("");
                setActiveCategory("All Plants");
              }}
            >
              Clear filters
            </Button>
          </motion.div>
        )}
      </div>
      <Cart />
    </section>
  );
};

export default PlantCatalog;
